INT X, Y, AixsZ, MOVE_CNT
REAL START_X, START_Y, START_Z
REAL X_ORIGIN_POSITION,Y_ORIGIN_POSITION, AXIT_Z_ORG_POS
REAL X_MOVE_DISTANCE, Y_MOVE_DISTANCE
REAL AXIS_RD_X, AXIS_RD_Y, AXIS_RD_Z
GLOBAL REAL X_POS_ARRAY(5), Y_POS_ARRAY(5)
REAL RADIUS, RADIUS2
REAL XSEG_VEL
REAL START_VEL
REAL END_X, END_Y
REAL L_START_X, L_START_Y
GLOBAL INT G_START_SIG_(2)
REAL AccX, AccY
! AXIS Number Degine
X = 0;
Y = 1;
AixsZ = 4; ! axis is 4


MOVE_CNT = 1

! X,Y,T Initial Position Setting
X_ORIGIN_POSITION  = 450
Y_ORIGIN_POSITION  = 350
AXIT_Z_ORG_POS = 20

START_X = 450
START_Y = 300
START_Z = 20
! axis ready pos set
AXIS_RD_X = 0
AXIS_RD_Y = 0
AXIS_RD_Z = 0

! Rectangle Length Setting
X_MOVE_DISTANCE = 48.31
Y_MOVE_DISTANCE = 27.28
! Radius, XSEG Velocity Setting
RADIUS = 3.8; 
RADIUS2 = 3.9
XSEG_VEL = 8
START_VEL = 100

ENABLE (X,Y)

! Radius Range Error Check
IF RADIUS > (X_MOVE_DISTANCE/2) |RADIUS > (Y_MOVE_DISTANCE/2)
	DISP"Rounding Radius must be smaller than (X/Y Length)/2"
	STOP
ELSE

END

 
 
WAIT 1000

! X,Y,T XSEG Coordinate Array Setting
X_POS_ARRAY(0)	= X_ORIGIN_POSITION + RADIUS
X_POS_ARRAY(1)	= X_ORIGIN_POSITION + X_MOVE_DISTANCE - RADIUS
X_POS_ARRAY(2)	= X_ORIGIN_POSITION + X_MOVE_DISTANCE
X_POS_ARRAY(3)	= X_ORIGIN_POSITION

Y_POS_ARRAY(0)	= Y_ORIGIN_POSITION
Y_POS_ARRAY(1)	= Y_ORIGIN_POSITION + RADIUS
Y_POS_ARRAY(2)	= Y_ORIGIN_POSITION + Y_MOVE_DISTANCE - RADIUS2
Y_POS_ARRAY(3)	= Y_ORIGIN_POSITION + Y_MOVE_DISTANCE



L_START_X = START_X - 10
L_START_Y = START_Y
END_X =  X_POS_ARRAY(0)+10
END_Y = Y_POS_ARRAY(1)-10

VEL(X) = START_VEL
VEL(Y) = START_VEL
ACC(X) = (POW(START_VEL,2)/RADIUS)
ACC(Y) = ACC(X)
JERK(X) = ACC(X)*10
JERK(Y) = ACC(X)*10
PTP/E (X,Y), L_START_X, Y_POS_ARRAY(0)
WAIT 1000
! Segment Motion Start
G_START_SIG_(1) = 1;
AccX = 100000
VEL(X) = XSEG_VEL
VEL(Y) = XSEG_VEL
ACC(X) = AccX !(POW(XSEG_VEL,2)/RADIUS)
ACC(Y) = ACC(X)
DEC(X) = ACC(X)
DEC(Y) = ACC(X)
JERK(X) = AccX*10
JERK(Y) = AccX*10
!TRACK G_START_SIG(0)
 
	LOOP MOVE_CNT 
		XSEG/v (X,Y), L_START_X, Y_POS_ARRAY(0), XSEG_VEL
			LINE(X,Y), X_POS_ARRAY(0), Y_POS_ARRAY(0)
			LINE(X,Y), X_POS_ARRAY(1), Y_POS_ARRAY(0)
			ARC2(X,Y), X_POS_ARRAY(1), Y_POS_ARRAY(1), ACOS(-1)/2
			LINE(X,Y), X_POS_ARRAY(2), Y_POS_ARRAY(2)
			ARC2(X,Y), X_POS_ARRAY(1), Y_POS_ARRAY(2), ACOS(-1)/2
			LINE(X,Y), X_POS_ARRAY(0), Y_POS_ARRAY(3)
			ARC2(X,Y), X_POS_ARRAY(0), Y_POS_ARRAY(2), ACOS(-1)/2
			LINE(X,Y), X_POS_ARRAY(3), Y_POS_ARRAY(1)
			ARC2(X,Y), X_POS_ARRAY(0), Y_POS_ARRAY(1), ACOS(-1)/2
			LINE(X,Y), END_X, END_Y
		ENDS(X,Y)
	 
		TILL GSEG(X) = -1
	END !loop end
	!PTP/E (X,Y), END_X, END_Y
 G_START_SIG_(1) = 0;
Wait 1000
!G_START_SIG(0) = 0;
!G_START_SIG(1) = 0;
STOP
